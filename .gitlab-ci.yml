image: ubuntu:20.04

stages:
 - format
#  - build
 - test

.dependencies:
  before_script:
    - apt-get update -qq
    - export DEBIAN_FRONTEND=noninteractive && apt-get install -y -qq
      casacore-data casacore-dev casacore-tools
      cmake
      g++
      git
      libblas-dev liblapack-dev
      libboost-filesystem-dev libboost-system-dev libboost-date-time-dev
      libboost-program-options-dev libboost-test-dev
      libcfitsio-dev
      libfftw3-dev
      libgsl-dev
      libhdf5-dev
      libopenmpi-dev
      libpython3-dev
      pkg-config
      python3-dev python3-numpy
      python3-sphinx
      python3-pip
      wget

format:
  stage: format
  extends: .dependencies
  script:
    # Update external/aocommon, which contains format.sh.
    - git submodule update --init external/aocommon
    - pip3 install clang-format==9.0.0 cmake-format
    # Check formatting of header (*.h), source (*.cpp) and CMake files
    - ./scripts/run-format.sh

test-das5:
  stage: test
  # needs: []
  tags:
    - das5
  before_script:
    - source scripts/das5_modules.sh
    - export OPENBLAS_NUM_THREADS=1
  script:
    - cd ..
    - mkdir -p build && cd build && rm -rf *
    - cmake -DCFITSIO_ROOT_DIR=$CFITSIO_ROOT_DIR -DCASACORE_ROOT_DIR=$CASACORE_ROOT_DIR -DCMAKE_INSTALL_PREFIX=. -DCMAKE_PREFIX_PATH="${IDG_ROOT_DIR};${EVERYBEAM_ROOT_DIR};${FFTW3_ROOT_DIR}" ../wsclean
    - make -j4
    - make checkintegration-nightly
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: manual

# build-without-everybeam:
#   stage: build
#   extends: .dependencies
#   script:
#     - pip3 install gcovr
#     - mkdir build
#     - cd build
#     - cmake -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ../
#     - make
#     - make doc
#     - make install
#     - make check
#     - gcovr -r .. -e '.*/tests/.*' -e '.*/external/.*' -e '.*/CompilerIdCXX/.*' --json -o run-unit.json
#     # gcovr to enable line coverage highlighting in MRs
#     - gcovr --add-tracefile run-unit.json --xml > coverage.xml
#     # gcovr to create badge
#     - gcovr --add-tracefile run-unit.json
#   artifacts:
#     reports:
#       cobertura: build/coverage.xml

# build-with-everybeam:
#   stage: build
#   extends: .dependencies
#   script:
#     - mkdir -p /opt/everybeam/build && cd /opt/everybeam && git clone https://git.astron.nl/RD/EveryBeam.git
#     - cd build/ && cmake -DCMAKE_INSTALL_PREFIX=.. ../EveryBeam/ && make install -j4
#     - cd $CI_PROJECT_DIR && mkdir build && cd build
#     - cmake -DCMAKE_PREFIX_PATH='/opt/everybeam' ../
#     - make
#     - make install
#     - make check

# # Testing job is pretty inefficient, since we can't reuse the image from
# # an earlier job. Hence, this job should be triggered manually
# testing:
#   stage: test
#   extends: .dependencies
#   when: manual
#   script:
#     - which taql
#     - mkdir build
#     - cd build
#     - cmake -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ../
#     - make -j20
#     - make checksystem
