image: ubuntu:20.04

stages:
 - format
 - build
 - tests

before_script:
 - apt-get update -qq
 - export DEBIAN_FRONTEND=noninteractive && apt-get install -y -qq
    casacore-data casacore-dev
    cmake
    g++
    git
    libblas-dev liblapack-dev
    libboost-filesystem-dev libboost-system-dev libboost-date-time-dev
    libboost-program-options-dev libboost-test-dev
    libcfitsio-dev
    libfftw3-dev
    libgsl-dev
    libhdf5-dev
    libopenmpi-dev
    libpython3-dev
    pkg-config
    python3-dev python3-numpy
    python3-sphinx
    python3-pip
    wget

format:
  stage: format
  script:
    - pip3 install clang-format==9.0.0
    # Check formatting of header (*.h) and source (*.cpp) files
    - ./scripts/run-clang-format.sh

build-without-everybeam:
  stage: build
  script:
    - pip3 install gcovr
    - mkdir build
    - cd build
    - cmake -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ../
    - make
    - make doc
    - make install
    # - make check
    # - gcovr -r .. -e '.*/tests/.*' -e '.*/external/.*' -e '.*/CompilerIdCXX/.*' --json -o run-unit.json
    # # gcovr to enable line coverage highlighting in MRs
    # - gcovr --add-tracefile run-unit.json --xml > coverage.xml
    # # gcovr to create badge
    # - gcovr --add-tracefile run-unit.json
  artifacts:
    paths:
      - build
    reports:
      cobertura: build/coverage.xml

# build-with-everybeam:
#   stage: build
#   script:
#     - mkdir -p /opt/everybeam/build && cd /opt/everybeam && git clone https://git.astron.nl/RD/EveryBeam.git
#     - cd build/ && cmake -DCMAKE_INSTALL_PREFIX=.. ../EveryBeam/ && make install -j4
#     - cd $CI_PROJECT_DIR && mkdir build && cd build
#     - cmake -DCMAKE_PREFIX_PATH='/opt/everybeam' ../
#     - make
#     - make install
#     - make check

test-wsclean-commands:
  stage: tests
  needs: [build-without-everybeam]
  when: manual
  before_script:
    # Install aoflagger
    - mkdir -p /opt/aoflagger/build && cd /opt/aoflagger && git clone https://gitlab.com/aroffringa/aoflagger.git src
    - cd build && cmake ../src && make -j4 install
    # Install DP3
    - mkdir -p /opt/dp3/build && cd /opt/dp3 && git clone https://git.astron.nl/RD/DP3.git
    - cd build/ && cmake ../DP3 && make install -j4
  script:
    - cd $CI_PROJECT_DIR/build
    - make checkwscleancommands
